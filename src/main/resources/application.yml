server:
  port: 8080

server:
  port: 8080

    name: eda-backend
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    streams:
      application-id: ${KAFKA_STREAMS_APP_ID:eda-alerts-app}
      replication-factor: 1
      properties:
        processing.guarantee: exactly_once_v2
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:postgres}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      server:
        port: 8080

      spring:
        application:
          name: eda-backend
        kafka:
          bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
          streams:
            application-id: ${KAFKA_STREAMS_APP_ID:eda-alerts-app}
            replication-factor: 1
            properties:
              processing.guarantee: exactly_once_v2
        datasource:
          url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:postgres}
          username: ${DB_USER:postgres}
          password: ${DB_PASSWORD:postgres}
          driver-class-name: org.postgresql.Driver
          hikari:
            maximum-pool-size: 10
            minimum-idle: 2
            connection-timeout: 30000

      management:
        metrics:
          enabled: true
        endpoints:
          web:
            exposure:
              include: health,info,metrics,prometheus

      app:
        jwt:
          secret: ${JWT_SECRET:dev-super-secret-change-me}
        alerts:
          threshold: ${ALERT_THRESHOLD:10000}

      datasource:
        description: "Postgres datasource (optional)"

      kafka:
        listener:
          concurrency: 3
